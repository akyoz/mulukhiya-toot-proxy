doctype html
html lang='ja'
  head
    == slim.render 'fragment/metadata'
    == slim.render 'fragment/assets'
  body
    == slim.render 'fragment/header'
    == slim.render 'fragment/breadcrumbs', {current: 'メディアカタログ'}
    main id='app' class=env.type
      == slim.render 'fragment/message'
      h2 メディアカタログ
      ul class='medias clearfix' v-if='medias'
        li class='media' v-for='media in medias'
          .media-container
            a :href='media.url' target='_blank' v-if='media.thumbnail_url && media.subtype=="image"'
              img :src='media.thumbnail_url'
            video :src='media.url' controls='' v-else-if='media.subtype=="video"'
            audio :src='media.url' controls='' v-else-if='media.subtype=="audio"'
            a :href='media.url' target='_blank' v-else='' = '{{media.file_name}}'
          ul class='params'
            li class='param'
              i class='fas fa-calendar'
              | {{media.created_at_str}}
          ul class='params'
            i class='fas fa-image' v-if='media.thumbnail_url && media.subtype=="image"'
            i class='fas fa-video' v-else-if='media.subtype=="video"'
            i class='fas fa-play-circle' v-else-if='media.subtype=="audio"'
            li class='param' v-if='media.pixel_size' = '{{media.pixel_size}}'
            li class='param' v-if='media.duration' = '{{media.duration}}s'
            li class='param' = '{{media.type}}'
            li class='param' v-if='media.file_size_str' = '{{media.file_size_str}}'
          ul class='params'
            li class='param'
              i class='fas fa-user'
              | {{media.acct}}
          ul class='params'
            li class='param'
              i class='fas fa-comment'
              a :href='media.status_url' target='_blank' = controller.status_label
      p v-else-if='account' 読み込み中…
    == slim.render 'fragment/footer'
    javascript:
      'use strict'
      Vue.use(VTooltip)
      Vue.use(MulukhiyaLib)
      new Vue({
        el: '#app',
        data: {
          message: null,
          account: {is_admin: false},
          medias: null,
        },
        mounted: function () {
          Vue.getConfig()
            .then(e => {this.account = e.account})
            .catch(e => {this.message = Vue.createErrorMessage(e)})
          this.load()
            .then(e => {this.medias = e})
            .catch(e => {
              this.message = Vue.createErrorMessage(e)
              this.medias = []
            })
        },
        methods: {
          load: Vue.getMedias,
        },
      })
