doctype html
html lang='ja'
  head
    == slim.render 'fragment/metadata'
    == slim.render 'fragment/assets'
  body
    == slim.render 'fragment/header'
    == slim.render 'fragment/breadcrumbs', {current: 'メディアカタログ'}
    main id='app' class=env.type
      == slim.render 'fragment/message'
      h2 メディアカタログ
      ul class='medias' v-if='medias'
        li class='media' v-for='media in medias'
          .image_container
            a :href='media.url' target='_blank' v-if='media.thumbnail_url && media.subtype=="image"'
              img :src='media.thumbnail_url'
            video :src='media.url' style='width:100%' controls='' v-else-if='media.subtype=="video"'
            audio :src='media.url' style='width:100%' controls='' v-else-if='media.subtype=="audio"'
            a :href='media.url' target='_blank' v-else='' = '{{media.file_name}}'
          ul class='params'
            li class='param' = '{{media.created_at_str}}'
            li class='param' v-if='media.pixel_size' = '{{media.pixel_size}}'
            li class='param' v-if='media.duration' = '{{media.duration}}s'
            li class='param' = '{{media.type}}'
            li class='param' v-if='media.file_size_str' = '{{media.file_size_str}}'
          ul class='params'
            li class='param' = '{{media.acct}}'
            li class='param'
              a :href='media.status_url' target='_blank' = controller.status_label
      p v-else-if='username' 読み込み中…
    == slim.render 'fragment/footer'
    javascript:
      'use strict'
      Vue.use(VTooltip)
      Vue.use(MulukhiyaLib)
      new Vue({
        el: '#app',
        data: {
          message: null,
          username: null,
          token_error: false,
          medias: null,
        },
        mounted: function () {
          Vue.login()
            .then(e => {this.username = e.username})
            .catch(e => {
              this.message = e.response.data.error || e.message
              this.token_error = true
            })
          this.load()
            .then(e => {this.medias = e})
            .catch(e => {this.message = e.response.data.error || e.message})
        },
        methods: {
          load: Vue.getMedias,
        },
      })
