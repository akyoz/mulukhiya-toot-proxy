doctype html
html lang='ja'
  head
    == slim.render 'fragment/metadata'
    == slim.render 'fragment/assets'
  body
    == slim.render 'fragment/header'
    == slim.render 'fragment/breadcrumbs', {current: 'トークンの管理'}
    main id='app' class=env.type
      == slim.render 'fragment/message'
      h2 トークンの管理
      nav class='tokens'
        .token
          a href='/mulukhiya/app/auth' 新しいトークンを登録
        .token v-for='user in users'
          a href='#' @click='switchUser(user)' = '@{{user.username}}'
          span class='loggedin' v-if='user.token==token' ログイン中
          i class='fas fa-trash' @click='deleteUser(user)' v-tooltip.bottom="'トークンの削除'" v-else=''
          span class='scopes' = '権限: {{user.scopes}}'
    == slim.render 'fragment/footer'
    javascript:
      'use strict'
      Vue.use(window.VuejsDialog.main.default)
      Vue.use(VTooltip)
      Vue.use(MulukhiyaLib)
      new Vue({
        el: '#app',
        data: {
          message: null,
          username: null,
          users: [],
          tokens: [],
          token: Vue.getToken(),
        },
        mounted: function () {
          Vue.getConfig()
            .then(e => {this.username = e.account.username})
            .catch(e => {this.message = Vue.createErrorMessage(e)})
          Vue.getUsers()
            .then(e => {this.users = e})
            .catch(e => {this.message = Vue.createErrorMessage(e)})
        },
        methods: {
          switchUser: function (user) {
            Vue.switchUser(user)
              .then(e => {
                this.username = e.username
                location.href = '/mulukhiya'
              })
          },
          deleteUser: function (user) {
            this.$dialog.confirm(
              {
                title: 'トークンの削除',
                body: `@${user.username}のトークンを一覧から削除します。（サーバからは削除されません）`,
              },
              {okText: '削除', cancelText: 'キャンセル'}
            ).then(e => {
              Vue.deleteToken(user.token)
            }).then(e => {
              this.tokens = e
              return Vue.getUsers()
            }).then(e => {
              this.users = e
            }).catch(e => {this.message = e.message})
          },
        },
      })
