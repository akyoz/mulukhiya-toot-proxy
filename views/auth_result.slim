doctype html
html lang='ja'
  head
    == slim.render 'fragment/metadata'
    == slim.render 'fragment/assets'
  body
    == slim.render 'fragment/header'
    == slim.render 'fragment/breadcrumbs', {current: 'トークンの登録'}
    main id='app' class=env.type
      == slim.render 'fragment/message'
      h2 トークンの登録
      - if params[:status].to_i < 400
        p アプリケーションの認証とトークンの登録が完了しました。
        div
          h3 アクセストークン
          textarea id='token_text' class='short' = params[:result][:access_token]
          i class='fas fa-clipboard' v-on:click='copyToken' v-tooltip.bottom="'クリップボードにコピー'"
        div
          h3 Slack互換webhook URL
          textarea id='webhook_text' = params[:hook_url]
          i class='fas fa-clipboard' v-on:click='copyWehbook' v-tooltip.bottom="'クリップボードにコピー'"
      - else
        p class='alert' = "エラー（#{params[:status]}）"
    == slim.render 'fragment/footer'
    javascript:
      'use strict'
      Vue.use(VTooltip)
      new Vue({
        el: '#app',
        data: {
          message: null,
          username: null,
          token_error: false,
          token: '#{crypt.new.encrypt(params[:result][:access_token])}',
        },
        mounted: function () {
          const href = '/mulukhiya/config?token=' + encodeURIComponent(this.token)
          axios.get(href, {responseType: 'json'})
            .then(e => {
              this.username = e.data.account.username
              localStorage.setItem('mulukhiya_token', this.token)
            }).catch(e => {
              this.message = e.message
            })
        },
        methods: {
          copyToken: function () {
            document.getElementById('token_text').select()
            document.execCommand('copy')
          },
          copyWehbook: function () {
            document.getElementById('webhook_text').select()
            document.execCommand('copy')
          },
        },
      })
