doctype html
html lang='ja'
  head
    title = package.name
    meta charset='UTF-8'
    == slim.render 'fragment/metadata'
    == slim.render 'fragment/assets'
  body
    == slim.render 'fragment/header'
    == slim.render 'fragment/breadcrumbs', {current: 'アプリケーションの認証'}
    main id='app'
      == slim.render 'fragment/message'
      h2 = '{{auth_command}}'
      form method='POST' action='/mulukhiya/app/auth'
        ol
          li
            a href=params[:oauth_url] target='_blank' 認証コードを取得
          li
            | 取得した認証コードを↓に貼り付けて…
            br
            input type='text' name='code' placeholder='認証コード' maxlength='64' class='code'
            br
            - if params.dig(:errors, :code)
              span class='alert'
                = params[:errors][:code].join
          li
            button id='submit_button' 認証する
    javascript:
      new Vue({
        el: '#app',
        data: {
          message: null,
          token_error: false,
          auth_command: 'アプリケーションの認証',
        },
        mounted: function () {
          const token = localStorage.getItem('mulukhiya_token')
          if (token) {
            axios.get('/mulukhiya/config?token=' + encodeURIComponent(token), {responseType: 'json'})
              .then(e => {
                this.username = e.data.account.username
                this.message = 'login: @' + this.username
                this.auth_command = 'アプリケーションの再認証'
              }).catch(e => {
                document.getElementById('message-container').classList.add('alert')
                this.message = e.message
              })
          } else {
            this.token_error = true
            this.message = 'invalid token'
          }
        },
      })
