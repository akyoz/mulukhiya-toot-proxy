doctype html
html lang='ja'
  head
    == slim.render 'fragment/metadata'
    == slim.render 'fragment/assets'
  body
    == slim.render 'fragment/header'
    == slim.render 'fragment/breadcrumbs', {current: 'トークンの登録'}
    main id='app' class=env.type
      == slim.render 'fragment/message'
      h2 トークンの登録
      h3 手順
      - if ['Mastodon', 'Pleroma'].member?(controller.name)
        form method='POST' action='/mulukhiya/auth'
          ol
            li
              a href=params[:oauth_url] target='_blank' 認証コードを取得
            li
              | 取得した認証コードを↓に貼り付けて…
              br
              input type='text' name='code' placeholder='認証コード' maxlength='64' class='code'
              br
              - if params.dig(:errors, :code)
                span class='alert' = params[:errors][:code].join
            li
              button 認証する
      - if ['Misskey', 'めいすきー'].member?(controller.name)
        ol
          li
            a href=params[:oauth_url] 認証コードを取得
            | してください。
    == slim.render 'fragment/footer'
    javascript:
      Vue.use(VTooltip)
      new Vue({
        el: '#app',
        data: {
          message: null,
          username: null,
          token_error: false,
        },
        mounted: function () {
          'use strict'
          const token = localStorage.getItem('mulukhiya_token')
          if (token) {
            const href = '/mulukhiya/config?token=' + encodeURIComponent(token)
            axios.get(href, {responseType: 'json'})
              .then(e => {
                this.username = e.data.account.username
              }).catch(e => {
                this.message = e.message
                this.token_error = true
              })
          } else {
            this.token_error = true
          }
        },
      })
